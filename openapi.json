{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "API Documentation with JWT Authentication"
  },
  "host": "18.141.198.43",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Bearer token for authentication. Format: Bearer {token}"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Operations related to Authentication (JWT)"
    },
    {
      "name": "Cart",
      "description": "Operations related to Cart management"
    },
    {
      "name": "Category",
      "description": "Operations related to Category management"
    },
    {
      "name": "Order",
      "description": "Operations related to Order management"
    },
    {
      "name": "Product",
      "description": "Operations related to Product management"
    },
    {
      "name": "User",
      "description": "Operations related to User management"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new customer",
        "description": "Register a new user with the role of CUSTOMER.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User registration data",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer registered successfully"
          },
          "500": {
            "description": "Failed to register as customer"
          }
        }
      }
    },
    "/auth/register-admin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new admin",
        "description": "Register a new user with the role of ADMIN. This endpoint should only be used by authorized users.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Admin registration data",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Admin Name"
                },
                "email": {
                  "type": "string",
                  "example": "admin@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "adminpassword"
                }
              },
              "required": ["name", "email", "password"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Admin registered successfully"
          },
          "500": {
            "description": "Failed to register as admin"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login and get JWT token",
        "description": "Authenticate a user and return a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User login data",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "userpassword"
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Login berhasil."
                },
                "token": {
                  "type": "string",
                  "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "maxLength": 1000
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid credentials."
          },
          "404": {
            "description": "Email not found"
          },
          "500": {
            "description": "An error occurred during login"
          }
        }
      }
    },
    "/cart/create": {
      "post": {
        "tags": ["Cart"],
        "summary": "Create a new cart",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cart creation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" }
              },
              "required": ["userId"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart created successfully"
          }
        }
      }
    },
    "/cart": {
      "post": {
        "tags": ["Cart"],
        "summary": "Create a new cart",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cart creation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cartId": { "type": "integer" },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productId": { "type": "integer" },
                      "quantity": { "type": "integer" }
                    },
                    "required": ["productId", "quantity"]
                  }
                }
              },
              "required": ["cartId", "items"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cart created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "addedItems": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "productId": { "type": "integer" },
                      "quantity": { "type": "integer" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found"
          },
          "500": {
            "description": "Failed to add product to cart"
          }
        }
      }
    },
    "/cart/item/{cartItemId}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update cart item quantity",
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Cart item update details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quantity": { "type": "integer" }
              },
              "required": ["quantity"]
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Cart item quantity updated successfully"
          }
        }
      }
    },
    "/cart/{userId}": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get cart by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Cart retrieved successfully"
          }
        }
      }
    },
    "/cart/{cartItemId}": {
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove item from cart",
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Item removed from cart successfully"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" }
              },
              "required": ["name"]
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "201": {
            "description": "Category created successfully"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "Categories retrieved successfully"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Category"],
        "summary": "Get category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully"
          }
        }
      },
      "put": {
        "tags": ["Category"],
        "summary": "Update category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Category update details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" }
              }
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Category updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Category"],
        "summary": "Delete category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Order"],
        "summary": "Create a new order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Order creation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": { "type": "integer" }
              },
              "required": ["userId"]
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "userId": { "type": "integer" },
                    "totalPrice": { "type": "number" },
                    "orderItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": { "type": "integer" },
                          "quantity": { "type": "integer" },
                          "price": { "type": "number" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request (e.g., User ID is required or Cart is empty)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                },
                "example": { "error": "User ID is required" }
              }
            }
          },
          "500": {
            "description": "Failed to create order due to a server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "details": { "type": "string" }
                  }
                },
                "example": {
                  "error": "Failed to create order",
                  "details": "Error details message"
                }
              }
            }
          }
        }
      }
    },
    "/orders/user/{userId}": {
      "get": {
        "tags": ["Order"],
        "summary": "Get orders by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully"
          }
        }
      }
    },
    "/orders/{id}/status": {
      "put": {
        "tags": ["Order"],
        "summary": "Update order status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Order status updated successfully"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Product"],
        "summary": "Create a new product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product creation details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "description": { "type": "string" },
                "price": { "type": "number" },
                "stok": { "type": "integer" },
                "imgUrl": { "type": "string" },
                "categoryId": { "type": "integer" }
              },
              "required": ["name", "price", "categoryId"]
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "price": { "type": "number" },
                    "stok": { "type": "integer" },
                    "imgUrl": { "type": "string" },
                    "categoryId": { "type": "integer" }
                  }
                },
                "example": {
                  "id": "1",
                  "name": "Example Product",
                  "description": "A sample product description",
                  "price": 100.0,
                  "stok": 50,
                  "imgUrl": "http://example.com/image.png",
                  "categoryId": "1"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                },
                "example": { "error": "Failed to create product" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Product"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "Products retrieved successfully"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully"
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the product to update"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product update details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "description": { "type": "string" },
                "price": { "type": "number" },
                "stok": { "type": "integer" },
                "imgUrl": { "type": "string" }
              }
            }
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "price": { "type": "number" },
                    "stok": { "type": "integer" },
                    "imgUrl": { "type": "string" }
                  }
                },
                "example": {
                  "id": "1",
                  "name": "Updated Product",
                  "description": "Updated description",
                  "price": 200.0,
                  "stok": 30,
                  "imgUrl": "http://example.com/new-image.png"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" }
                  }
                },
                "example": { "error": "Failed to update product" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "responses": {
          "200": { "description": "List of users retrieved successfully" },
          "500": { "description": "Failed to retrieve users" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "description": "Retrieve a user by their ID",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": { "description": "User retrieved successfully" },
          "404": { "description": "User not found" },
          "500": { "description": "Failed to retrieve user" }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user",
        "description": "Update a user's information",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User data to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "role": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "User updated successfully" },
          "500": { "description": "Failed to update user" }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user",
        "description": "Delete a user by their ID",
        "security": [{ "ApiKeyAuth": [], "JWT": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "500": { "description": "Failed to delete user" }
        }
      }
    }
  }
}
